#####
##### `AbstractTransformSpecification`
#####

"""
    abstract type AbstractTransformSpecification

Transform specifications are represented by subtypes of `AbstractTransformSpecification`.
Each leaf should be immutable and define methods for
- [`input_specification](@ref)` returns type expected/allowed as transform input
- [`output_specification](@ref)` returns output type generated by successfully completed processing
- [`transform!`](@ref), which transforms an input of type `input_specification`
    and returns an output of type `output_specification`
"""
abstract type AbstractTransformSpecification end
# TODO-future: add/document mutation of transform input

"""
    transform!(transform_spec::AbstractTransformSpecification, input_record)

Return result of applying `transform_spec` to an `input` of type `input_specification(transform_spec)`,
where result is an `output_specification(transform_spec)`.
"""
function transform! end

"""
    input_specification(transform_spec::AbstractTransformSpecification)

Return specification accepted as input to `transform_spec`.
"""
function input_specification end

"""
    output_specification(transform_spec::AbstractTransformSpecification)

Return specification of return value of `transform_spec`.
"""
function output_specification end
