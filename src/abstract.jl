#####
##### `AbstractTransformSpecification`
#####

"""
    abstract type AbstractTransformSpecification

Transform specifications are represented by subtypes of `AbstractTransformSpecification`.
Each leaf should be immutable and define methods for
- [`input_specification](@ref)` returns type expected/allowed as transform input
- [`output_specification](@ref)` returns output type generated by successfully completed processing
- [`transform!`](@ref), which performs processing on an input of type `input_specification`
    and returns an output of type `output_specification`
"""
abstract type AbstractTransformSpecification end
# TODO-future: add/document mutation of transform input

"""
    transform!(process::AbstractTransformSpecification, input)

Return result of applying `process` to an `input` of type `input_specification(process)`,
where result is an `output_specification(process)`.
"""
function transform! end

"""
    input_specification(process::AbstractTransformSpecification)

Return specification accepted as input to `process`.
"""
function input_specification end

"""
    output_specification(process::AbstractTransformSpecification)

Return specification of return value of `process`.
"""
function output_specification end
